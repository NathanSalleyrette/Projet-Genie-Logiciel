---CODE_ASSEMBLEUR---
	TSTO #3
	BOV pile_pleine
	ADDSP #3
; start main program
; Construction des tables des méthodes
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
	LOAD #2, R2
	STORE R2, 3(GB)
; Beginning of main instructions:
	LOAD 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	MUL 3(GB), R2
	ADD #1, R2
	STORE R2, 3(GB)
	LOAD 3(GB), R2
	CMP #1, R2
	BNE E_Sinon.0
	WSTR "ok"
	BRA E_Fin.0
E_Sinon.0:
	WSTR "bouuh"
E_Fin.0:
	HALT
; Classe Object
; ---------- Code de la méthode equals dans la classe Object (built in)
code.Object.equals:
	LOAD -2(LB), R1
	CMP -3(LB), R1
	BEQ Object.equals.true
	LOAD #0, R0
	BRA fin.Object.equals
Object.equals.true:
	LOAD #1, R0
fin.Object.equals:
	RTS
; Erreurs
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
; end main program
---SORTIE MACHINE IMA---
ok
