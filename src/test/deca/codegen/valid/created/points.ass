	TSTO #16
	BOV pile_pleine
	ADDSP #12
; start main program
; Construction des tables des méthodes
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Construction de la table des méthodes de Point_2D
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.Point_2D.setY, R0
	STORE R0, 5(GB)
	LOAD code.Point_2D.getY, R0
	STORE R0, 6(GB)
; Construction de la table des méthodes de Point_3D
	LEA 3(GB), R0
	STORE R0, 7(GB)
	LOAD code.Object.equals, R0
	STORE R0, 8(GB)
	LOAD code.Point_2D.setY, R0
	STORE R0, 9(GB)
	LOAD code.Point_2D.getY, R0
	STORE R0, 10(GB)
; Main program
; new ligne 27
	NEW #3, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Point_2D
	POP R2
	STORE R2, 11(GB)
; new ligne 28
	NEW #5, R2
	BOV tas_plein
	LEA 7(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Point_3D
	POP R2
	STORE R2, 12(GB)
; Beginning of main instructions:
	WSTR " p1 est un point en 2D, on regarde ses champs :"
	WNL
	WSTR "x = "
	LOAD 11(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 1(R2), R2
	LOAD R2, R1
	WINT
	WSTR ", y = "
; Appel de méthode ligne 31
	ADDSP #1
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #1
	LOAD R0, R2
	LOAD R2, R1
	WINT
	WNL
	WSTR "on change les champs de p1 : x = 1, y = 2"
	WNL
	LOAD #1, R2
	LOAD 11(GB), R3
	CMP #null, R3
	BEQ dereferencement.null
	STORE R2, 1(R3)
	LOAD 1(R3), R2
; Appel de méthode ligne 34
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD #2, R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	LOAD R0, R2
	WSTR "x = "
	LOAD 11(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 1(R2), R2
	LOAD R2, R1
	WINT
	WSTR ", y = "
; Appel de méthode ligne 35
	ADDSP #1
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #1
	LOAD R0, R2
	LOAD R2, R1
	WINT
	WNL
	WSTR " p2 est un point en 3D, on regarde ses champs :"
	WNL
	WSTR "x = "
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 1(R2), R2
	LOAD R2, R1
	WINT
	WSTR ", y = "
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 3(R2), R2
	LOAD R2, R1
	WINT
	WSTR ", z = "
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 4(R2), R2
	LOAD R2, R1
	WINT
	WNL
	WSTR " regardons ce qui se passe si on utilise la méthode héritée getY"
	WNL
	WSTR "x = "
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 1(R2), R2
	LOAD R2, R1
	WINT
	WSTR ", y = "
; Appel de méthode ligne 39
	ADDSP #1
	LOAD 12(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #1
	LOAD R0, R2
	LOAD R2, R1
	WINT
	WSTR ", z = "
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 4(R2), R2
	LOAD R2, R1
	WINT
	WNL
	HALT
; Classe Object
; ---------- Code de la méthode equals dans la classe Object (built in)
code.Object.equals:
	LOAD -2(LB), R1
	CMP -3(LB), R1
	SEQ R0
	RTS
; Classe Point_2D
; ---------- Initialisation des champs de Point_2D
init.Point_2D:
	TSTO #1
	BOV pile_pleine
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 1(R1)
	STORE R0, 2(R1)
	LOAD #3, R2
	LOAD -2(LB), R1
	STORE R2, 2(R1)
	POP R2
	RTS
; ---------- Code de la methode setY dans la classe Point_2D ligne 11
code.Point_2D.setY:
	TSTO #2
	BOV pile_pleine
; Sauvegarde des registres
	PUSH R2
	PUSH R3
	LOAD -3(LB), R2
	LOAD -2(LB), R3
	CMP #null, R3
	BEQ dereferencement.null
	STORE R2, 2(R3)
	LOAD 2(R3), R2
fin.Point_2D.setY:
	POP R3
	POP R2
	RTS
; ---------- Code de la methode getY dans la classe Point_2D ligne 15
code.Point_2D.getY:
	TSTO #1
	BOV pile_pleine
; Sauvegarde des registres
	PUSH R2
	LOAD -2(LB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 2(R2), R2
	LOAD R2, R0
	BRA fin.Point_2D.getY
	WSTR "Erreur : sortie de la méthode sans return"
	WNL
	ERROR
fin.Point_2D.getY:
	POP R2
	RTS
; Classe Point_3D
; ---------- Initialisation des champs de Point_3D
init.Point_3D:
	TSTO #4
	BOV pile_pleine
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 3(R1)
	STORE R0, 4(R1)
	PUSH R1
	BSR init.Point_2D
	SUBSP #1
	LOAD #4, R2
	LOAD -2(LB), R1
	STORE R2, 3(R1)
	POP R2
	RTS
; Erreurs
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
dereferencement.null:
	WSTR "Erreur : dereferencement.null"
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : tas_plein"
	WNL
	ERROR
; end main program
