	TSTO #4
	BOV pile_pleine
	ADDSP #4
; start main program
; Construction des tables des méthodes
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Beginning of main instructions:
	LOAD #1, R2
	ADD #2, R2
	LOAD #3, R3
	MUL #4, R3
	QUO #5, R3
	BOV division_par_zero
	REM #6, R3
	BOV division_par_zero
	SUB R3, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	ADD #2, R2
	LOAD #3, R3
	MUL #4, R3
	QUO #5, R3
	BOV division_par_zero
	REM #6, R3
	BOV division_par_zero
	SUB R3, R2
	FLOAT R2, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD R2, R1
	WINT
	WNL
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	MUL #2, R2
	LOAD #3, R3
	QUO #4, R3
	BOV division_par_zero
	ADD R3, R2
	SUB #5, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	MUL #2, R2
	LOAD #3, R3
	QUO #4, R3
	BOV division_par_zero
	ADD R3, R2
	SUB #5, R2
	FLOAT R2, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD R2, R1
	WINT
	WNL
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	LOAD #2, R3
	QUO #3, R3
	BOV division_par_zero
	MUL #4, R3
	SUB R3, R2
	ADD #5, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	LOAD #2, R3
	QUO #3, R3
	BOV division_par_zero
	MUL #4, R3
	SUB R3, R2
	ADD #5, R2
	FLOAT R2, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD R2, R1
	WINT
	WNL
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	QUO #2, R2
	BOV division_par_zero
	REM #6, R2
	BOV division_par_zero
	LOAD #3, R3
	MUL #4, R3
	ADD R3, R2
	SUB #5, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	QUO #2, R2
	BOV division_par_zero
	REM #6, R2
	BOV division_par_zero
	LOAD #3, R3
	MUL #4, R3
	ADD R3, R2
	SUB #5, R2
	FLOAT R2, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD R2, R1
	WINT
	WNL
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	SUB #5, R2
	ADD #3, R2
	STORE R2, 3(GB)
	LOAD #1, R2
	SUB #5, R2
	ADD #3, R2
	FLOAT R2, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD R2, R1
	WINT
	WNL
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	FLOAT #1, R2
	ADD #0x1.99999ap-3, R2
	BOV debordement_flottant
	LOAD #3, R3
	MUL #4, R3
	QUO #5, R3
	BOV division_par_zero
	FLOAT R3, R3
	SUB R3, R2
	BOV debordement_flottant
	STORE R2, 4(GB)
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	FLOAT #1, R2
	MUL #0x1.99999ap-3, R2
	BOV debordement_flottant
	LOAD #3, R3
	QUO #4, R3
	BOV division_par_zero
	FLOAT R3, R3
	ADD R3, R2
	BOV debordement_flottant
	LOAD #5, R3
	FLOAT #5, R3
	SUB R3, R2
	BOV debordement_flottant
	STORE R2, 4(GB)
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	FLOAT #1, R2
	LOAD #0x1.99999ap-3, R3
	LOAD #3, R4
	FLOAT #3, R4
	DIV R4, R3
	BOV debordement_flottant
	LOAD #4, R4
	FLOAT #4, R4
	MUL R4, R3
	BOV debordement_flottant
	SUB R3, R2
	BOV debordement_flottant
	LOAD #5, R3
	FLOAT #5, R3
	ADD R3, R2
	BOV debordement_flottant
	STORE R2, 4(GB)
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	FLOAT #1, R2
	DIV #0x1.99999ap-3, R2
	BOV debordement_flottant
	LOAD #3, R3
	MUL #4, R3
	FLOAT R3, R3
	ADD R3, R2
	BOV debordement_flottant
	LOAD #5, R3
	FLOAT #5, R3
	SUB R3, R2
	BOV debordement_flottant
	STORE R2, 4(GB)
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	LOAD #1, R2
	FLOAT #1, R2
	SUB #0x1.0p-1, R2
	BOV debordement_flottant
	LOAD #3, R3
	FLOAT #3, R3
	ADD R3, R2
	BOV debordement_flottant
	STORE R2, 4(GB)
	LOAD 4(GB), R2
	LOAD R2, R1
	WFLOAT
	WNL
	WNL
	HALT
; Classe Object
; ---------- Code de la méthode equals dans la classe Object (built in)
code.Object.equals:
	LOAD -2(LB), R1
	CMP -3(LB), R1
	SEQ R0
	RTS
; Erreurs
division_par_zero:
	WSTR "Erreur : division_par_zero"
	WNL
	ERROR
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
debordement_flottant:
	WSTR "Erreur : debordement_flottant"
	WNL
	ERROR
; end main program
