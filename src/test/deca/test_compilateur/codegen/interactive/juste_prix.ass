	ADDSP #9
; start main program
; Construction des tables des méthodes
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Construction de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.but_atteint, R0
	STORE R0, 5(GB)
	LOAD code.A.indice, R0
	STORE R0, 6(GB)
; Main program
; new ligne 29
	NEW #2, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 7(GB)
	BRA Assign_False.0
	LOAD #1, R2
	BRA Assign_Fin.0
Assign_False.0:
	LOAD #0, R2
Assign_Fin.0:
	STORE R2, 9(GB)
; Beginning of main instructions:
	WSTR "Entrez une valeur entre 0 et 1000 maintenant!"
	WNL
	RINT
	BOV io_error
	LOAD R1, R2
	STORE R2, 8(GB)
	BRA E_Cond.1
E_Debut.1:
; Appel de méthode ligne 35
	ADDSP #2
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD 8(GB), R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #2
	LOAD R0, R2
	WSTR "Entrez une valeur 0 et 1000 maintenant!"
	WNL
	RINT
	BOV io_error
	LOAD R1, R2
	STORE R2, 8(GB)
E_Cond.1:
; Appel de méthode ligne 34
	ADDSP #2
	LOAD 7(GB), R2
	STORE R2, 0(SP)
	LOAD 8(GB), R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	CMP #0, R0
	BEQ E_Debut.1
	WSTR "Bravo, la bone valeur était 500 !"
	WNL
	HALT
; Classe Object
; ---------- Code de la méthode equals dans la classe Object (built in)
code.Object.equals:
	LOAD -2(LB), R1
	CMP -3(LB), R1
	SEQ R0
	RTS
; Classe A
; ---------- Initialisation des champs de A
init.A:
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 1(R1)
	LOAD #500, R2
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	POP R2
	RTS
; ---------- Code de la methode but_atteint dans la classe A ligne 10
code.A.but_atteint:
; Sauvegarde des registres
	PUSH R2
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	CMP -3(LB), R2
	BNE Assign_False.2
	LOAD #1, R2
	BRA Assign_Fin.2
Assign_False.2:
	LOAD #0, R2
Assign_Fin.2:
	LOAD R2, R0
	BRA fin.A.but_atteint
	WSTR "Erreur : sortie de la méthode sans return"
	WNL
	ERROR
fin.A.but_atteint:
	POP R2
	RTS
; ---------- Code de la methode indice dans la classe A ligne 13
code.A.indice:
; Sauvegarde des registres
	PUSH R2
	LOAD -3(LB), R2
	CMP #1000, R2
	BGT E_Sinon.3_Fin.4
	LOAD -3(LB), R2
	CMP #0, R2
	BGE E_Sinon.3
E_Sinon.3_Fin.4:
	WSTR " on avait dit entre 0 et 1000 !"
	WNL
	BRA E_Fin.3
E_Sinon.3:
	WSTR "c'est "
	LOAD -2(LB), R2
	LOAD 1(R2), R2
	CMP -3(LB), R2
	BLE E_Sinon.5
	WSTR "plus !"
	WNL
	BRA E_Fin.5
E_Sinon.5:
	WSTR "moins !"
	WNL
E_Fin.5:
E_Fin.3:
fin.A.indice:
	POP R2
	RTS
; Erreurs
tas_plein:
	WSTR "Erreur : tas_plein"
	WNL
	ERROR
io_error:
	WSTR "Erreur : io_error"
	WNL
	ERROR
; end main program
