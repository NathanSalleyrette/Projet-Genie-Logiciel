	TSTO #20
	BOV pile_pleine
	ADDSP #14
; start main program
; Construction des tables des méthodes
; Construction de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Construction de la table des méthodes de B
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
; Construction de la table des méthodes de A
	LEA 3(GB), R0
	STORE R0, 5(GB)
	LOAD code.Object.equals, R0
	STORE R0, 6(GB)
; Construction de la table des méthodes de U
	LEA 1(GB), R0
	STORE R0, 7(GB)
	LOAD code.Object.equals, R0
	STORE R0, 8(GB)
	LOAD code.U.t, R0
	STORE R0, 9(GB)
	LOAD code.U.f, R0
	STORE R0, 10(GB)
; Main program
; new ligne 24
	NEW #1, R2
	BOV tas_plein
	LEA 7(GB), R0
	STORE R0, 0(R2)
	STORE R2, 11(GB)
; new ligne 25
	NEW #3, R2
	BOV tas_plein
	LEA 5(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 12(GB)
; Beginning of main instructions:
; Appel de méthode ligne 28
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD 12(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 2(R2), R0
	CMP #0, R0
	BEQ Assign_False.0
	LOAD #1, R2
	BRA Assign_Fin.0
Assign_False.0:
	LOAD #0, R2
Assign_Fin.0:
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	LOAD R0, R2
	LOAD 12(GB), R2
	STORE R2, 14(GB)
; Appel de méthode ligne 30
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD 14(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 1(R2), R0
	CMP #0, R0
	BEQ Assign_False.1
	LOAD #1, R2
	BRA Assign_Fin.1
Assign_False.1:
	LOAD #0, R2
Assign_Fin.1:
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 3(R2)
	SUBSP #2
	LOAD R0, R2
; cast  B vers A ligne 31
	LOAD 14(GB), R2
	CMP #null, R2
	BEQ Cast_Fin.2
	PUSH R2
; instanceof ligne 31
	LOAD 14(GB), R2
	LEA 5(GB), R0
	BRA InstanceOf_Cond.3
InstanceOf_Debut.3:
	LOAD 0(R2), R2
	CMP R0, R2
	BEQ InstanceOf_True.3
InstanceOf_Cond.3:
	CMP #null, R2
	BNE InstanceOf_Debut.3
	BRA InstanceOf_Fin.3
InstanceOf_True.3:
	BRA Cast_Fin.2
InstanceOf_Fin.3:
	BRA cast_impossible
Cast_Fin.2:
	POP R2
	STORE R2, 13(GB)
; Appel de méthode ligne 32
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
	LOAD 13(GB), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 2(R2), R0
	CMP #0, R0
	BEQ Assign_False.4
	LOAD #1, R2
	BRA Assign_Fin.4
Assign_False.4:
	LOAD #0, R2
Assign_Fin.4:
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	LOAD R0, R2
; Appel de méthode ligne 33
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
; Appel de méthode ligne 33
	ADDSP #2
	LOAD 13(GB), R2
	STORE R2, 0(SP)
	LOAD 12(GB), R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 1(R2)
	SUBSP #2
	CMP #0, R0
	BEQ Assign_False.5
	LOAD #1, R2
	BRA Assign_Fin.5
Assign_False.5:
	LOAD #0, R2
Assign_Fin.5:
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	LOAD R0, R2
; Appel de méthode ligne 34
	ADDSP #2
	LOAD 11(GB), R2
	STORE R2, 0(SP)
; Appel de méthode ligne 34
	ADDSP #2
	LOAD 12(GB), R2
	STORE R2, 0(SP)
	LOAD 13(GB), R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 1(R2)
	SUBSP #2
	CMP #0, R0
	BEQ Assign_False.6
	LOAD #1, R2
	BRA Assign_Fin.6
Assign_False.6:
	LOAD #0, R2
Assign_Fin.6:
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #2
	LOAD R0, R2
	HALT
; Classe Object
; ---------- Code de la méthode equals dans la classe Object (built in)
code.Object.equals:
	LOAD -2(LB), R1
	CMP -3(LB), R1
	SEQ R0
	RTS
; Classe B
; ---------- Initialisation des champs de B
init.B:
	TSTO #1
	BOV pile_pleine
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 1(R1)
	BRA Assign_False.7
	LOAD #1, R2
	BRA Assign_Fin.7
Assign_False.7:
	LOAD #0, R2
Assign_Fin.7:
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	POP R2
	RTS
; Classe A
; ---------- Initialisation des champs de A
init.A:
	TSTO #4
	BOV pile_pleine
	PUSH R2
	LOAD -2(LB), R1
	LOAD #0, R0
	STORE R0, 2(R1)
	PUSH R1
	BSR init.B
	SUBSP #1
	LOAD #1, R2
	BRA Assign_Fin.8
Assign_False.8:
	LOAD #0, R2
Assign_Fin.8:
	LOAD -2(LB), R1
	STORE R2, 2(R1)
	POP R2
	RTS
; Classe U
; ---------- Code de la methode t dans la classe U ligne 13
code.U.t:
	TSTO #1
	BOV pile_pleine
; Sauvegarde des registres
	PUSH R2
	WSTR "t="
	LOAD -3(LB), R0
	CMP #0, R0
	BEQ E_Sinon.9
	WSTR "t"
	WNL
	BRA E_Fin.9
E_Sinon.9:
	WSTR "f"
	WNL
E_Fin.9:
fin.U.t:
	POP R2
	RTS
; ---------- Code de la methode f dans la classe U ligne 17
code.U.f:
	TSTO #1
	BOV pile_pleine
; Sauvegarde des registres
	PUSH R2
	WSTR "f="
	LOAD -3(LB), R0
	CMP #0, R0
	BEQ E_Sinon.10
	WSTR "t"
	WNL
	BRA E_Fin.10
E_Sinon.10:
	WSTR "f"
	WNL
E_Fin.10:
fin.U.f:
	POP R2
	RTS
; Erreurs
pile_pleine:
	WSTR "Erreur : pile_pleine"
	WNL
	ERROR
dereferencement.null:
	WSTR "Erreur : dereferencement.null"
	WNL
	ERROR
cast_impossible:
	WSTR "Erreur : cast_impossible"
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : tas_plein"
	WNL
	ERROR
; end main program
